{"version":3,"sources":["node_modules/waait/index.js","utils.js","controls.js","sound.js"],"names":["hslToRgb","h","s","l","r","g","b","hue2rgb","p","q","t","Math","round","dataInput","document","querySelector","popup","colorInput","widthInput","handleOption","localStorage","setItem","value","classList","add","handleColor","handleWidth","addEventListener","getItem","WIDTH","HEIGHT","canvas","ctx","getContext","width","height","analyzer","bufferLength","getAudio","stream","navigator","mediaDevices","getUserMedia","audio","audioCtx","AudioContext","createAnalyser","source","createMediaStreamSource","connect","fftSize","frequencyBinCount","timeData","Uint8Array","frequencyData","drawTimeData","drawFrequency","getByteTimeDomainData","clearRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","forEach","data","i","v","y","moveTo","lineTo","stroke","requestAnimationFrame","getByteFrequencyData","barWidth","amount","percent","barHeight","fillStyle","fillRect","handleError","err","console","log","catch"],"mappings":"AEAA,AFAA,MEAMa,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,+BAAvB,CAAlB;AACA,AFAA,MEAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;AACA,AFAA,AGFA,MDEME,UAAU,GAAGH,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAnB;AACA,AFAA,MEAMG,UAAU,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAnB;ACFA;ADIA,SAASI,YAAT,GAAwB;ACHxB,EDIEC,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCR,SAAS,CAACS,KAA1C;ADNK,ECOLN,KAAK,CAACO,CDPQvB,QCOd,ADPK,CCOWwB,ADPOvB,CAAlB,ECOL,ADP0BC,CCON,ADPf,EAAwBC,CAAxB,EAA2B,GCOhC;AACD,EDPC,IAAIC,CAAJ;EACA,IAAIC,CAAJ;ACOF,ACLA,EFDE,IECIwB,AFDAvB,CAAJ,ECMOmB,ECLE,GAAG,IAAd,EDKA,GAAuB;ACJvB,EDKEL,ICLIU,MAAM,EDKE,CAACT,ACLA,IAAf,GDKE,CAAqB,OAArB,EAA8BJ,UAAU,CAACK,KAAzC;AACD,ACLD,EFDE,IECIS,AFDA7B,CAAC,IAAI,CECC,AFDV,EAAY,CECCY,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,IFDIX,CAAC,CECC4B,EFDE3B,CECC,AFDA,GECG0B,AFDAzB,CAAC,GAAGH,CAAZ,CECc,AFFJ,CEEK8B,AFDA,UECP,CAAkB,IAAlB,CAAZ;ADKA,ACJAF,EFDG,CAFD,GEGI,CAACG,EDIER,ADLA,GECT,GAAeG,KDIf,ACJA,GDIuB;ACHvBE,EDIEX,EDLE,EECE,CAACe,GFDG5B,GECV,CDIc,CAACc,CCJCS,CFDC,GAAG,ECKlB,ACJF,CDIuB,MDLMvB,CCK3B,EAA8BW,IDLZ,CAAiBV,CAAjB,EAAoBC,CAApB,CCKsB,CAACa,ADLAZ,CAAvB,EAA0B,ECK5C;AACD,ACJD,IAAI0B,EFDE,IAAI1B,CAAC,CECX,EFDc,CAAR,EAAWA,CAAC,IAAI,CAAL;AEEjB,IAAI2B,EFDE,IAAI3B,CAAC,GAAG,CAAR,CECN,CFDiBA,CAAC,IAAI,CAAL;ACKjBO,MDJM,ICII,ADJAP,CCICiB,ADJA,GAAG,IAAI,CAAZ,EAAe,MCIrB,CAA4B,ADJAnB,CAAC,GAAG,CAACC,CAAC,CCIlC,EAAqCgB,ADJAjB,CAAL,IAAU,CAAV,GAAcE,CAAzB,CCIrB;AACAO,ACHA,MFDM,ICII,ADJAP,CCICY,ADJA,GAAG,CECCgB,CDGf,EDJkB,CCIClB,ADJb,EAAe,EECrB,GAA0B,EFDEX,CAAP,ECIU,CAACmB,OAAb,CAAqB,OAArB,CAAnB;AACAV,ECHE,IFDI,EECEqB,EDGE,ADJA7B,CCICiB,ADJA,GECG,AFDA,GECG,CFDC,CAAZ,EAAe,EECEa,IDGvB,CAA4B,ADJAhC,CAAC,GECG,AFDA,CECCiC,AFDAhC,CAAC,CCIlC,EAAqCiB,ADJAlB,CAAL,KAAW,EECpB,CAAuBkC,CFDC,CCI/C,ADJ2C,GAAQhC,CAAnB,IAAwB,CAAnC,CECE,CAAoC;ADI3DQ,ICHIyB,EFDE,GECG,CDGC,CAACrB,ACHA,EFDEd,CAAP,ECIN,GAAmBY,YAAY,CAACQ,OAAb,CAAqB,OAArB,CAAnB;AACAf,ECL2D,CAApC,CAArB,AFCG,CAPD,ICWK,CAACc,gBAAV,CAA2B,OAA3B,EAAoCR,YAApC;AACAN,ECHE,MAAM+B,CDGC,CAACtB,KAAV,CCHgB,EDGEF,CCHC,IAAIyB,ODGO,CAACjB,ICHZ,EAAjB,CDGgB,CAAqB,SAArB,CAAlB;ECFEQ,EFDE,MECM,AFDA3B,CAAC,EECEmC,CFDCzC,CAAC,GAAG,GECG,AFDP,CECQ2C,EFDE3C,CAAC,IAAI,IAAID,CAAR,CAAX,CECD,EAAX,AFDoCC,CAAC,GAAGD,CAAJ,GAAQC,CAAC,GAAGD,CAA9C;EEEF,EFDE,IECI6C,EFDEvC,CAAC,GECG,AFDA,GECGoC,CFDCzC,CAAJ,GAAQM,CAAlB,EECqB,CAACuC,uBAAT,CAAiCT,MAAjC,CAAf;EACAQ,EFDE3C,CAAC,GECG,AFDAG,CECC0C,MFDM,CECb,AFDczC,CECC4B,AFDF,EAAI3B,CAAJ,EAAOR,CAAC,EECrB,CFDwB,CENA,CAQxB,EFF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","file":"sound.66e01127.js","sourceRoot":"..","sourcesContent":["const wait = (amount = 0) => new Promise(resolve => setTimeout(resolve, amount));\n\nmodule.exports = wait;\n","export function hslToRgb(h, s, l) {\r\n  let r;\r\n  let g;\r\n  let b;\r\n\r\n  if (s == 0) {\r\n    r = g = b = l; // achromatic\r\n  } else {\r\n    const hue2rgb = function hue2rgb(p, q, t) {\r\n      if (t < 0) t += 1;\r\n      if (t > 1) t -= 1;\r\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n      if (t < 1 / 2) return q;\r\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n      return p;\r\n    };\r\n\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1 / 3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1 / 3);\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n}\r\n","const dataInput = document.querySelector('.controls input[type=\"range\"]');\r\nconst popup = document.querySelector('.popup');\r\nconst colorInput = document.querySelector('[name=\"color\"]');\r\nconst widthInput = document.querySelector('[name=\"width\"]');\r\n\r\nfunction handleOption() {\r\n  localStorage.setItem('options', dataInput.value);\r\n  popup.classList.add('appear');\r\n}\r\nfunction handleColor() {\r\n  localStorage.setItem('color', colorInput.value);\r\n}\r\nfunction handleWidth() {\r\n  localStorage.setItem('width', widthInput.value);\r\n}\r\ncolorInput.addEventListener('input', handleColor);\r\ncolorInput.value = localStorage.getItem('color');\r\nwidthInput.addEventListener('input', handleWidth);\r\nwidthInput.value = localStorage.getItem('width');\r\ndataInput.addEventListener('input', handleOption);\r\ndataInput.value = localStorage.getItem('options');\r\n","import wait from 'waait';\nimport { hslToRgb } from './utils';\nimport get from './controls';\n\nconst WIDTH = 1500;\nconst HEIGHT = 1500;\nconst canvas = document.querySelector('canvas');\nconst ctx = canvas.getContext('2d');\ncanvas.width = WIDTH;\ncanvas.height = HEIGHT;\nlet analyzer;\nlet bufferLength;\n\nasync function getAudio() {\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: true,\n  });\n  const audioCtx = new AudioContext();\n  analyzer = audioCtx.createAnalyser();\n  const source = audioCtx.createMediaStreamSource(stream);\n  source.connect(analyzer);\n  // HOW MUCH DATA SHOULD WE COLLECT\n  // pull the data off the audio\n  analyzer.fftSize =\n    2 **\n    `${localStorage.getItem('options') ? localStorage.getItem('options') : 5}`;\n  bufferLength = analyzer.frequencyBinCount;\n\n  const timeData = new Uint8Array(bufferLength);\n  const frequencyData = new Uint8Array(bufferLength);\n  drawTimeData(timeData);\n  drawFrequency(frequencyData);\n}\n\nfunction drawTimeData(timeData) {\n  analyzer.getByteTimeDomainData(timeData);\n  // now that we have the data, lets turn it into something visual\n  // 1. Clean the canvas TODO\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  // 2. setup some canvas drawing\n  ctx.lineWidth = `${\n    localStorage.getItem('width') ? localStorage.getItem('width') : 1\n  }`;\n  ctx.strokeStyle = `${\n    localStorage.getItem('color') ? localStorage.getItem('color') : '#ffffff'\n  }`;\n  ctx.beginPath();\n  const sliceWidth = WIDTH / bufferLength;\n  let x = 0;\n  timeData.forEach((data, i) => {\n    const v = data / 128;\n    const y = (v * HEIGHT) / 2;\n    // Draw our lines\n    if (i === 0) {\n      ctx.moveTo(x, y);\n    } else {\n      ctx.lineTo(x, y);\n    }\n    x += sliceWidth;\n  });\n\n  ctx.stroke();\n  // call itself as soon as possible\n  requestAnimationFrame(() => drawTimeData(timeData));\n}\nfunction drawFrequency(frequencyData) {\n  // get the frequency data into our frequencyData array\n  analyzer.getByteFrequencyData(frequencyData);\n  // figure out the bar width\n  const barWidth = (WIDTH / bufferLength) * 2.5;\n  let x = 0;\n  frequencyData.forEach((amount) => {\n    // 0 to 255\n    const percent = amount / 255;\n    const [h, s, l] = [360 / (percent * 360) - 0.5, 0.8, 0.5];\n    const barHeight = (HEIGHT * percent) / 2;\n    // TODO: CONVERT THE COLOUR TO HSL TODO\n    const [r, g, b] = hslToRgb(h, s, l);\n    ctx.fillStyle = `rgba(${r}, ${g}, ${b}, 1)`;\n    ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);\n    x += barWidth + 1;\n  });\n  requestAnimationFrame(() => drawFrequency(frequencyData));\n}\n\nfunction handleError(err) {\n  console.log(`You must give acces to your mic in order to proceed${err}`);\n}\ngetAudio().catch(handleError);\n"]}