{"mappings":"AAAA,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,AAAC;AAChD,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAChD,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;AACpC,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AACnD,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,AAAC;AAExC,KAAK,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;AACnC,KAAK,CAAC,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;AAChC,KAAK,CAAC,YAAY,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;AACtC,8BAA8B;AAC9B,yBAAyB;AACzB,kBAAkB;AAClB,eAAe;AACf,sCAAsC;AACtC,gBAAgB;AAChB,KAAK;AACL,sBAAsB;AACtB,4BAA4B;AAC5B,MAAM;AACN,KAAK;AACL,iBAAiB;AAEjB,qDAAqD;AACrD,eAAe,aAAa,GAAG;IAC3B,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;QACrD,KAAK,EAAE;YAAE,KAAK,EAAE,IAAI;YAAE,MAAM,EAAE,GAAG;SAAE;KACtC,CAAC,AAAC;IACH,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;IACzB,MAAM,KAAK,CAAC,IAAI,EAAE,CAAC;IACnB,qDAAqD;IACrD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IACjD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;IAChC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;IAClC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC;IACpC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;CACzC;AAED,aAAa,EAAE,CAAC","sources":["pixelated-face.js"],"sourcesContent":["const video = document.querySelector('.webcam');\nconst canvas = document.querySelector('.video');\nconst ctx = canvas.getContext('2d');\nconst faceCanvas = document.querySelector('.face');\nconst faceCtx = canvas.getContext('2d');\n\nvideo.setAttribute('autoplay', '');\nvideo.setAttribute('muted', '');\nvideo.setAttribute('playsinline', '');\n// const setupCamera = () => {\n// navigator.mediaDevices\n// .getUserMedia({\n// video: true,\n// video: { width: 600, height: 300 },\n// audio: false,\n// })\n// .then((stream) => {\n// video.srcObject = stream;\n// });\n// };\n// setupCamera();\n\n// write a function that will populate the user video\nasync function populateVideo() {\n    const stream = await navigator.mediaDevices.getUserMedia({\n        video: { width: 1280, height: 720 },\n    });\n    video.srcObject = stream;\n    await video.play();\n    // size the canvases to be the same size as the video\n    console.log(video.videoWidth, video.videoHeight);\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    faceCanvas.width = video.videoWidth;\n    faceCanvas.height = video.videoHeight;\n}\n\npopulateVideo();"],"names":[],"version":3,"file":"face.78b1ac0f.js.map","sourceRoot":"/__parcel_source_root/"}