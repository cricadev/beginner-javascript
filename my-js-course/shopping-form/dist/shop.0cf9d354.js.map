{"version":3,"sources":["shop.js"],"names":["shoppingForm","document","querySelector","list","items","handleSubmit","e","preventDefault","name","currentTarget","item","value","id","Date","now","complete","push","console","log","length","target","reset","dispatchEvent","CustomEvent","displayItems","html","map","join","innerHTML","mirrorToLocalStorage","localStorage","setItem","JSON","stringify","restoreFromLocalStorage","info","lsItems","parse","getItem","handleDelete","filter","markAsComplete","itemRef","find","addEventListener","parseInt","matches"],"mappings":"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","file":"shop.0cf9d354.js","sourceRoot":"..","sourcesContent":["const shoppingForm = document.querySelector('.shopping');\r\nconst list = document.querySelector('.list');\r\n\r\n// & we ne3ed an array to hold our state\r\nlet items = [];\r\n\r\nfunction handleSubmit(e) {\r\n    e.preventDefault();\r\n    const name = e.currentTarget.item.value;\r\n    // if its empty then dont submit it\r\n    if (!name) return;\r\n\r\n    const item = {\r\n        name,\r\n        id: Date.now(),\r\n        complete: false,\r\n    };\r\n    // & push the items into our state\r\n    items.push(item);\r\n    console.log(item.name);\r\n    console.log(`There are now ${items.length} items in the list`);\r\n    console.log(name);\r\n    console.log(items);\r\n    // & CLEAR THE FORM\r\n    e.target.reset();\r\n\r\n    // &fire off a custom event that will tell anyone else who cares that the items have been updated\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\nfunction displayItems() {\r\n    console.log(items);\r\n    const html = items\r\n        .map(\r\n            (item) => `<li class=\"shopping-item\">\r\n        <input value=\"${item.id}\" type=\"checkbox\"\r\n        ${item.complete ? 'checked' : ''}><span class=\"itemName\">${item.name}\r\n        </span>\r\n        <button aria-label=\"Remove ${item.name}\"\r\n        value=\"${item.id}\"\r\n        >&times;</button>\r\n        </li>`\r\n        )\r\n        .join('');\r\n    console.log(html);\r\n    list.innerHTML = html;\r\n}\r\n\r\nfunction mirrorToLocalStorage() {\r\n    console.log('saving mirror to local storage...');\r\n    localStorage.setItem('items', JSON.stringify(items));\r\n}\r\n\r\nfunction restoreFromLocalStorage() {\r\n    console.info('restoring from local storage...');\r\n    // & pull the items from localStorage\r\n    const lsItems = JSON.parse(localStorage.getItem('items'));\r\n    // & if there are items in localStorage, push them into our state\r\n    if (lsItems) {\r\n        if (lsItems.length) {\r\n            // items = lsItems;\r\n            // lsItems.forEach((item) => {\r\n            // items.push(item);\r\n            // });\r\n            items.push(...lsItems);\r\n            // items.push(lsItems[0]);\r\n            list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n        }\r\n    }\r\n}\r\n\r\nfunction handleDelete(id) {\r\n    console.log(`Deleting item with ${id}`);\r\n    // & update our items array without this one\r\n    items = items.filter((item) => item.id !== id);\r\n    console.log(items);\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\nfunction markAsComplete(id) {\r\n    console.log('markAsComplete', id);\r\n    const itemRef = items.find((item) => item.id === id);\r\n    itemRef.complete = !itemRef.complete;\r\n    list.dispatchEvent(new CustomEvent('itemsUpdated'));\r\n}\r\n\r\nshoppingForm.addEventListener('submit', handleSubmit);\r\nlist.addEventListener('itemsUpdated', displayItems);\r\nlist.addEventListener('itemsUpdated', mirrorToLocalStorage);\r\n// & Event Delegation: We listen for the click on the list <ul> but then delegate the click over to the button if that is what was clicked\r\nlist.addEventListener('click', (e) => {\r\n    const id = parseInt(e.target.value);\r\n    if (e.target.matches('button')) {\r\n        handleDelete(id);\r\n    }\r\n    if (e.target.matches(\"input[type='checkbox']\")) {\r\n        markAsComplete(id);\r\n    }\r\n});\r\n\r\nrestoreFromLocalStorage();"]}